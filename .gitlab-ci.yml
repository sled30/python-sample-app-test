stages:
  - build
  - push
  - clear
  - deploy
  - prod
build:
  stage: build
  image: docker:latest
  only:
    - develop
  before_script:
    - docker login 172.16.2.9:5005 -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD}
  script:
    - echo ${CI_PIPELINE_ID}
    - docker build -t 172.16.2.9:5005/root/python-sample-app-test1/web:${CI_PIPELINE_ID} ./docker/web
    - docker build -t 172.16.2.9:5005/root/python-sample-app-test1/app:${CI_PIPELINE_ID} ./docker/app
    - docker build -t 172.16.2.9:5005/root/python-sample-app-test1/db:${CI_PIPELINE_ID} ./docker/db
push:
  stage: push
  image: docker:latest
  only:
    - develop
  before_script:
    - docker login 172.16.2.9:5005 -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD}
  script:
    - docker push 172.16.2.9:5005/root/python-sample-app-test1/web:${CI_PIPELINE_ID}
    - docker push 172.16.2.9:5005/root/python-sample-app-test1/app:${CI_PIPELINE_ID}
    - docker push 172.16.2.9:5005/root/python-sample-app-test1/db:${CI_PIPELINE_ID}
clear:
  stage: clear
  only:
    - develop
  script:
    - docker rmi $(docker ps -a -q) || true
    - docker system prune -a -f|| true
deploy:
  stage: deploy
  only:
    - develop
  script:
    - echo "Done"
prod:
  when: manual
  stage: prod
  only:
    - develop
  script:
    - echo "Done"
