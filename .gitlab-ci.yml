stages:
  - build
  - test
  - deploy
build:
  stage: build
  image: docker:latest
  script:
    - docker login 172.16.2.9:5005 -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD}
    - echo ${CI_PIPELINE_ID}
    - docker build -t 172.16.2.9:5005/root/python-sample-app-test1/web:${CI_PIPELINE_ID} ./docker/web
    - docker push 172.16.2.9:5005/root/python-sample-app-test1/web:${CI_PIPELINE_ID}
    - docker build -t 172.16.2.9:5005/root/python-sample-app-test1/app:${CI_PIPELINE_ID} ./docker/app
    - docker push 172.16.2.9:5005/root/python-sample-app-test1/app:${CI_PIPELINE_ID}
    - docker build -t 172.16.2.9:5005/root/python-sample-app-test1/db:${CI_PIPELINE_ID} ./docker/db
    - docker push 172.16.2.9:5005/root/python-sample-app-test1/db:${CI_PIPELINE_ID}
    - docker rmi $(docker ps -a -q) || true
    - docker system prune -a -f|| true
test:
  stage: test
  script:
    - echo "Done"
deploy:
  stage: deploy
  script:
    - echo "Done"
